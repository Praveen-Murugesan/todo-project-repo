{"version":3,"sources":["D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/$_lazy_route_resource lazy","D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/app.component.css","D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/app.component.html","D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/app.component.ts","D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/app.module.ts","D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/shared/task.model.ts","D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/todo-addtask/todo-addtask.component.css","D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/todo-addtask/todo-addtask.component.html","D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/todo-addtask/todo-addtask.component.ts","D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/todo-dashboard/todo-dashboard.component.css","D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/todo-dashboard/todo-dashboard.component.html","D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/todo-dashboard/todo-dashboard.component.ts","D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/todo-header/todo-header.component.css","D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/todo-header/todo-header.component.html","D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/todo-header/todo-header.component.ts","D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/todo-service/todo.service.ts","D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/environments/environment.ts","D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".btn{\\r\\n    width: 120px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<app-todo-header></app-todo-header>\\r\\n<router-outlet></router-outlet>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\nimport { TodoHeaderComponent } from './todo-header/todo-header.component';\nimport { TodoDashboardComponent } from './todo-dashboard/todo-dashboard.component';\nimport { TodoAddtaskComponent } from './todo-addtask/todo-addtask.component';\nimport { TodoService } from './todo-service/todo.service';\n\n\nconst routes: Routes = [\n  {\n    path:'',\n    component: TodoDashboardComponent\n  },\n  {\n    path:'addNew',\n    component: TodoAddtaskComponent\n  }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoHeaderComponent,\n    TodoDashboardComponent,\n    TodoAddtaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes),\n    NgbModule.forRoot(),\n    HttpModule\n  ],\n  providers: [TodoService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/app.module.ts","\r\nexport class Tasks {\r\n    public taskId:number;\r\n    public taskName:string;\r\n    public taskDesc:string;\r\n    public taskDueDate:Date;\r\n    public taskStatus:string;\r\n    public selected:boolean\r\n\r\n    constructor(taskId:number, taskName:string, \r\n        taskDesc:string, taskDueDate:Date, taskStatus:string, selected:boolean) {\r\n            this.taskId = taskId;\r\n            this.taskName = taskName;\r\n            this.taskDesc = taskDesc;\r\n            this.taskDueDate = taskDueDate;\r\n            this.taskStatus = taskStatus;\r\n            this.selected = selected;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/shared/task.model.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".text-center {\\r\\n    text-align:center\\r\\n }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/todo-addtask/todo-addtask.component.css\n// module id = ../../../../../src/app/todo-addtask/todo-addtask.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"saveResp !== ''\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\" \\n        [ngClass]=\\\"[saveRespColor == 'red'? 'alert alert-danger': 'alert alert-info']\\\">\\n            <span [ngClass]=\\\"[saveRespColor == 'red'? 'glyphicon glyphicon-exclamation-sign' : 'glyphicon glyphicon-ok']\\\"></span><span  [ngStyle]=\\\"{'color' : saveRespColor }\\\"> {{saveResp}} </span>\\n        </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <form novalidate [formGroup]=\\\"todoForm\\\" (ngSubmit)=\\\"submitToDoForm()\\\">        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-8\\\" class=\\\"form-group\\\"  \\n              [ngClass]=\\\"{\\n                'has-danger': taskName.invalid && (taskName.dirty || taskName.touched),\\n                'has-success': taskName.valid && (taskName.dirty || taskName.touched)\\n              }\\\">\\n            <label for=\\\"taskName\\\">Task Name: </label>\\n            <input type=\\\"text\\\" \\n              id=\\\"taskName\\\" \\n              class=\\\"form-control\\\"\\n              placeholder=\\\"Enter Task Name here..\\\" \\n              formControlName=\\\"taskName\\\"\\n              required/>\\n            <div class=\\\"alert alert-danger\\\"\\n               *ngIf=\\\"taskName.errors && (taskName.dirty || taskName.touched)\\\">\\n              <p *ngIf=\\\"taskName.errors.required\\\">Task Name is required</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-8\\\" class=\\\"form-group\\\"\\n            [ngClass]=\\\"{\\n              'has-danger': taskDesc.invalid && (taskDesc.dirty || taskDesc.touched),\\n              'has-success': taskDesc.valid && (taskDesc.dirty || taskDesc.touched)\\n            }\\\">\\n            <label for=\\\"taskDesc\\\">Task Description: </label>\\n            <textarea \\n              id=\\\"taskDesc\\\" \\n              class=\\\"form-control\\\" \\n              placeholder=\\\"Enter Task Description here..\\\"\\n              rows=\\\"3\\\"\\n              formControlName=\\\"taskDesc\\\" \\n              required></textarea>\\n            <div class=\\\"alert alert-danger\\\"\\n              *ngIf=\\\"taskDesc.errors && (taskDesc.dirty || taskDesc.touched)\\\">\\n              <p *ngIf=\\\"taskDesc.errors.required\\\">Task Description is required</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\" class=\\\"form-group\\\">            \\n            <label for=\\\"dueDate\\\">Due Date: </label>\\n            <div class=\\\"row\\\">\\n\\n              <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"input-group\\\" \\n                    [ngClass]=\\\"{\\n                      'has-error': dueDate.invalid && (dueDate.dirty || dueDate.touched),\\n                      'has-success': dueDate.valid && (dueDate.dirty || dueDate.touched)\\n                    }\\\">\\n                      <input id=\\\"dueDate\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\"\\n                              name=\\\"dp\\\" \\n                              ngbDatepicker\\n                              #datePicker=\\\"ngbDatepicker\\\" \\n                              formControlName=\\\"dueDate\\\" \\n                              required\\n                              readonly\\n                              #dueDateInpt>\\n                      <div class=\\\"input-group-addon\\\">\\n                          <button class=\\\"glyphicon glyphicon-calendar\\\" (click)=\\\"datePicker.toggle()\\\"></button>\\n                      </div>                      \\n                  </div>\\n                  <div class=\\\"alert alert-danger\\\"\\n                    *ngIf=\\\"dueDate.errors && (dueDate.dirty || dueDate.touched)\\\">\\n                    <p *ngIf=\\\"dueDate.errors.required\\\">Due Date is required</p>\\n                  </div>\\n              </div>\\n            </div>\\n           \\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\" class=\\\"form-group\\\">\\n            <button class=\\\"btn btn-success\\\" [type]=\\\"submit\\\" [disabled]=\\\"todoForm.invalid\\\">\\n              <span class=\\\"glyphicon glyphicon-ok\\\"></span> Save\\n            </button>\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"clearForm()\\\">\\n              <span class=\\\"glyphicon glyphicon-remove\\\"></span> Clear\\n            </button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/todo-addtask/todo-addtask.component.html\n// module id = ../../../../../src/app/todo-addtask/todo-addtask.component.html\n// module chunks = main","import { Component, OnInit, ViewChild, ElementRef, OnChanges } from '@angular/core';\nimport { ReactiveFormsModule,\n  FormsModule,\n  FormGroup,\n  FormControl,\n  Validators,\n  FormBuilder } from '@angular/forms';\nimport { TodoService } from '../todo-service/todo.service';\nimport { Tasks } from '../shared/task.model';\n\n@Component({\n  selector: 'app-todo-addtask',\n  templateUrl: './todo-addtask.component.html',\n  styleUrls: ['./todo-addtask.component.css'],\n  providers: [TodoService]\n})\nexport class TodoAddtaskComponent implements OnInit {\n\n  @ViewChild('dueDateInpt') dueDateInpt: ElementRef;\n   \n  todoForm: FormGroup;\n  taskName: FormControl;\n  taskDesc: FormControl;\n  dueDate: FormControl;\n\n  saveResp: string = '';\n  saveRespColor: string = '';\n  tempTask: Tasks;\n\n  constructor(private todoService: TodoService){}\n  \n  ngOnInit() {   \n    this.createFormControls();\n    this.createForm(); \n  }\n\n  createFormControls(){\n    this.taskName = new FormControl('', Validators.required);\n    this.taskDesc = new FormControl('', Validators.required);\n    this.dueDate = new FormControl('', Validators.required);\n  }\n \n  createForm(){\n    this.todoForm = new FormGroup({\n      taskName: this.taskName,\n      taskDesc: this.taskDesc,\n      dueDate: this.dueDate\n    });\n  }\n\n  submitToDoForm(){\n    if(this.todoForm.valid){\n      this.saveTask(this.taskName.value, this.taskDesc.value, this.dueDateInpt.nativeElement.value);\n      this.todoForm.reset();\n    }\n  }\n\n  saveTask(taskName: string, taskDesc: string, dueDate: string){\n\n    console.log('due date dfs.... '+dueDate);\n    this.todoService.saveTask(\n        new Tasks(null,taskName,taskDesc,new Date(dueDate),'Pending',false)\n      )\n      .subscribe(\n      data => {      \n        if(data == 'success'){\n          this.saveResp = 'Task Saved Successfully.';\n          this.saveRespColor = 'blue';\n        }else{\n          this.saveResp = 'Failure on Saving Task. Please contact Administrator.';\n          this.saveRespColor = 'red';\n        }        \n      },\n      err => {\n        console.log(err);\n        this.saveResp = 'Failure on Saving Task. Please contact Administrator.';\n        this.saveRespColor = 'red';\n      }\n    );\n    this.clearForm();\n  }\n\n  clearForm(){\n    this.todoForm.reset();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/todo-addtask/todo-addtask.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".task-check-box{\\r\\n    width: 20px;\\r\\n    height: 20px;\\r\\n}\\r\\n\\r\\n.list-group-item{\\r\\n    background-color: #cde6fd;\\r\\n}\\r\\n\\r\\n.list-group-item:hover{\\r\\n    background-color: #93c9fc !important;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/todo-dashboard/todo-dashboard.component.css\n// module id = ../../../../../src/app/todo-dashboard/todo-dashboard.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"button-group\\\">\\n          <button class=\\\"btn btn-danger btn-md\\\" (click)=\\\"deleteTasks()\\\" [disabled]=\\\"isDisable\\\">\\n              <span class=\\\"glyphicon glyphicon-remove\\\"></span>\\n                Delete\\n          </button>\\n          <button class=\\\"btn btn-success btn-md\\\" (click)=\\\"markTasksAsComplete()\\\" [disabled]=\\\"isDisable\\\">\\n              <span class=\\\"glyphicon glyphicon-saved\\\"></span>\\n                Mark as Completed\\n          </button>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <hr>\\n\\n  <div *ngIf=\\\"resp !== ''\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\" [ngClass]=\\\"[respColor == 'red'? 'alert alert-danger': 'alert alert-info']\\\"> \\n            <span [ngClass]=\\\"[respColor == 'red'? 'glyphicon glyphicon-exclamation-sign' : 'glyphicon glyphicon-ok']\\\"></span><span [ngStyle]=\\\"{'color' : respColor }\\\"> {{resp}} </span>\\n        </div>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"tasks?.length > 0; else noTasks\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"list-group\\\">\\n          <div class=\\\"list-group-item\\\">\\n              <input type=\\\"checkbox\\\" [checked]=\\\"selectedAll\\\" (change)=\\\"selectAll()\\\" class=\\\"task-check-box\\\"/>\\n          </div>\\n        <div class=\\\"list-group-item\\\" *ngFor=\\\"let task of tasks\\\">\\n            <div class=\\\"row\\\">       \\n                \\n                <div class=\\\"col-md-1\\\">\\n                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"task.selected\\\" [checked]=\\\"task.selected\\\" (change)=\\\"checkIfAllSelected()\\\" class=\\\"task-check-box\\\"/>\\n                </div>\\n                <div class=\\\"col-md-8\\\">\\n                    <h4>{{task.taskName}}</h4>\\n                    <p>{{task.taskDesc}}</p>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <span class=\\\"pull-right\\\" [ngStyle]=\\\"{'color': getColor(task.taskStatus) }\\\">{{task.taskStatus}}</span>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-12\\\">\\n                          <span class=\\\"pull-right\\\">{{task.taskDueDate | date: 'EEEE, MMMM d, yyyy'}}</span>\\n                      </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  </div>\\n  <ng-template #noTasks>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <span [ngStyle]=\\\"{'color' : 'darkgray' }\\\"> No Tasks to Display.</span>\\n        </div>\\n    </div>\\n  </ng-template>\\n  \\n  </div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/todo-dashboard/todo-dashboard.component.html\n// module id = ../../../../../src/app/todo-dashboard/todo-dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Tasks } from '../shared/task.model';\nimport { TodoService } from '../todo-service/todo.service';\n\n@Component({\n  selector: 'app-todo-dashboard',\n  templateUrl: './todo-dashboard.component.html',\n  styleUrls: ['./todo-dashboard.component.css'],\n  providers: [TodoService]\n})\nexport class TodoDashboardComponent implements OnInit {\n  selectedAll: boolean = false;\n  tasks:Tasks[] = [];\n  resp: string;\n  respColor: string;\n  isDisable: boolean = false;\n  \n  private tempTaskIds: number[];\n\n  constructor(public todoService: TodoService) { }\n\n  ngOnInit() {\n    this.resp = '';\n    this.respColor = '';\n    this.getAllTasks();\n  }\n\n  getAllTasks(){\n    this.todoService.getAllTasks().subscribe(\n      tasks => {\n        this.tasks = tasks;        \n        if(this.tasks.length <= 0){\n          this.isDisable = true;\n        }      \n      },\n      err => {\n        console.log(err);\n        this.isDisable = true;\n      }\n    );\n  }\n\n  deleteTasks(){\n    this.tempTaskIds = [];\n    for(var i=0; i < this.tasks.length; i++){\n      if(this.tasks[i].selected == true){\n        this.tempTaskIds.push(this.tasks[i].taskId);\n      }\n    }\n    if(this.tempTaskIds.length === 0){\n      this.resp = 'Please select atleast one Task to Delete.';\n      this.respColor = 'red';\n    }else{\n\n      this.todoService.deleteTasks(this.tempTaskIds).subscribe(\n        data => {\n          console.log(data);\n          if(data == 'success'){\n            this.resp = 'Tasks Deleted Successfully.';\n            this.respColor = 'blue';\n          }else{\n            this.resp = 'Failure on Deleting Tasks. Please contact Administrator.';\n            this.respColor = 'red';\n          }        \n        },\n        err => {\n          console.log(err);\n          this.resp = 'Failure on Deleting Tasks. Please contact Administrator.';\n          this.respColor = 'red';\n        }\n      );\n      setTimeout(() => {\n        this.getAllTasks();\n      }, 200);\n    }\n  }\n\n  markTasksAsComplete(){\n    this.tempTaskIds = [];\n    for(var i=0; i < this.tasks.length; i++){\n      if(this.tasks[i].selected == true){\n        this.tempTaskIds.push(this.tasks[i].taskId);\n      }\n    }\n    if(this.tempTaskIds.length === 0){\n      this.resp = 'Please select atleast one Task to Mark as Completed.';\n      this.respColor = 'red';\n    }else{\n      this.todoService.updateTasks(this.tempTaskIds).subscribe(\n        data => {\n          if(data == 'success'){\n            this.resp = 'Selected Tasks marked as Completed.';\n            this.respColor = 'blue';\n          }else{\n            this.resp = 'Failure on marking Task as completed. Please contact Administrator.';\n            this.respColor = 'red';\n          }        \n        },\n        err => {\n          console.log(err);\n          this.resp = 'Failure on marking Task as completed. Please contact Administrator.';\n          this.respColor = 'red';\n        }\n      );\n\n      setTimeout(() => {\n        this.getAllTasks();\n      }, 200);\n    }\n    if(this.selectedAll === true){\n      this.selectedAll = !this.selectedAll;\n    }\n  }\n\n  getColor(status:string) {\n    if(status == 'Completed'){\n      return 'green';\n    }else {\n      return 'red';\n    }\n  }\n\n  selectAll() {\n    this.selectedAll = !this.selectedAll;    \n    for (var i = 0; i < this.tasks.length; i++) {\n      this.tasks[i].selected = this.selectedAll;\n    }\n  }\n  checkIfAllSelected() {\n    this.selectedAll = this.tasks.every((item:Tasks) => {\n        return item.selected == true;\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/todo-dashboard/todo-dashboard.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".navbar {\\r\\n    background-color: #3cbcf8;\\r\\n}\\r\\n\\r\\n.navbar-brand{\\r\\n    color: #ffffff;\\r\\n    font-size: 2em;\\r\\n}\\r\\n\\r\\n.btn{    \\r\\n    width: 100px;\\r\\n}\\r\\n\\r\\n.todo-menu{\\r\\n    color: #ffffff;\\r\\n    font-size: 1em;\\r\\n}\\r\\n\\r\\n.todo-menu:hover{\\r\\n    color: #575353;\\r\\n    font-size: 1.25em;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/todo-header/todo-header.component.css\n// module id = ../../../../../src/app/todo-header/todo-header.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-default navbar-static-top\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"button\\\" \\n                class=\\\"navbar-toggle collapsed\\\" \\n                data-toggle=\\\"collapse\\\" \\n                data-target=\\\"#todo-navbar\\\" \\n                aria-expanded=\\\"false\\\" \\n                aria-controls=\\\"navbar\\\">\\n                    <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                    <span class=\\\"icon-bar\\\"></span>\\n                    <span class=\\\"icon-bar\\\"></span>\\n                    <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <span class=\\\"navbar-brand\\\">ToDo</span>\\n        </div>\\n        \\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"todo-navbar\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li><a href=\\\"#\\\" class=\\\"btn btn-link btn-md\\\" routerLink=\\\"\\\"> <span class=\\\"todo-menu\\\"><span class=\\\"glyphicon glyphicon-home\\\"></span> Home</span> </a></li>\\n                <li><a href=\\\"#\\\" class=\\\"btn btn-link btn-md\\\" routerLink=\\\"addNew\\\"> <span class=\\\"todo-menu\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span> New Task</span> </a></li>\\n            </ul>\\n        </div>\\n    </div>\\n</nav>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/todo-header/todo-header.component.html\n// module id = ../../../../../src/app/todo-header/todo-header.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-todo-header',\n  templateUrl: './todo-header.component.html',\n  styleUrls: ['./todo-header.component.css']\n})\nexport class TodoHeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/todo-header/todo-header.component.ts","import { Injectable } from '@angular/core';\nimport { Tasks } from '../shared/task.model';\n\nimport { Http, Response } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class TodoService {\n\n  private apiUrl: string = 'http://localhost:8092/todo/';\n  \n  constructor(private http: Http) {\n  }\n\n  getAllTasks(): Observable<Tasks[]> {\n    return this.http.get(this.apiUrl+'getAllTasks')\n    .map((res:Response) => <Tasks[]>res.json())\n    .catch(this.handleError);\n  } \n\n  saveTask(task: Tasks): Observable<string>{\n    return this.http.post(this.apiUrl+'/saveTask',task)\n    .map((res:Response) => res.text())\n    .catch(this.handleError); \n  } \n\n  deleteTasks(taskIds: number[]): Observable<string>{\n    return this.http.post(this.apiUrl+'/deleteTasks',taskIds)\n    .map((res:Response) => res.text())\n    .catch(this.handleError);\n  }\n\n  updateTasks(taskIds: number[]): Observable<string>{\n    return this.http.post(this.apiUrl+'/updateTasks',taskIds)\n    .map((res:Response) => res.text())\n    .catch(this.handleError); \n  }\n\n  private handleError(error: Response) {\n    console.error(error);\n    return Observable.throw(error.json().error || 'Server Error');\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/app/todo-service/todo.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// D:/Praveen-Official/IGT_Dubai_Interview/Project/ng5-todo-app/src/main.ts"],"sourceRoot":"webpack:///"}